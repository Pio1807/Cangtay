--// Services local Players = game:GetService("Players") local ReplicatedStorage = game:GetService("ReplicatedStorage") local TeleportService = game:GetService("TeleportService") local LocalPlayer = Players.LocalPlayer local LiveFolder = workspace:WaitForChild("Live") --// Character Setup local Character, HRP, Humanoid local function bindCharacter(char) 	Character = char 	HRP = char:WaitForChild("HumanoidRootPart") 	Humanoid = char:WaitForChild("Humanoid") end if LocalPlayer.Character then 	bindCharacter(LocalPlayer.Character) end LocalPlayer.CharacterAdded:Connect(function(char) 	bindCharacter(char) end) --// Remote local BladeRemote = ReplicatedStorage:WaitForChild("RemoteEvents"):WaitForChild("BladeCombatRemote") --// Configuration local TargetNames = {"Ultra Instinct Goku", "Killua"} local farming = false local bossDamaged = false local killAuraRunning = false local privateServerId = game.PrivateServerId local placeId = game.PlaceId --// GUI local screenGui = Instance.new("ScreenGui", game.CoreGui) screenGui.Name = "AutoFarmUI" screenGui.ResetOnSpawn = false local frame = Instance.new("Frame", screenGui) frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30) frame.Size = UDim2.new(0, 150, 0, 60) frame.Position = UDim2.new(0, 10, 0, 300) frame.BorderSizePixel = 0 local toggleButton = Instance.new("TextButton", frame) toggleButton.Size = UDim2.new(1, 0, 1, 0) toggleButton.Text = "Farm: OFF" toggleButton.Font = Enum.Font.SourceSansBold toggleButton.TextColor3 = Color3.new(1, 1, 1) toggleButton.TextScaled = true toggleButton.BackgroundColor3 = Color3.fromRGB(90, 0, 0) toggleButton.MouseButton1Click:Connect(function() 	farming = not farming 	toggleButton.Text = farming and "Farm: ON" or "Farm: OFF" 	toggleButton.BackgroundColor3 = farming and Color3.fromRGB(0, 120, 0) or Color3.fromRGB(90, 0, 0) end) --// Disable physics movement task.spawn(function() 	while true do 		if farming and Character and Humanoid and HRP then 			pcall(function() 				Humanoid:ChangeState(11) 				Humanoid.PlatformStand = true 				HRP.Velocity = Vector3.zero 			end) 		end 		task.wait(0.05) 	end end) --// Kill Aura local function startKillAura() 	if killAuraRunning then return end 	killAuraRunning = true 	getgenv().G = true 	getgenv().Creator = " - HalloweenGaster" 	task.spawn(function() 		while getgenv().G and getgenv().Creator == " - HalloweenGaster" do 			if not farming or not bossDamaged then 				task.wait(0.5) 				continue 			end 			pcall(function() 				sethiddenproperty(LocalPlayer, "SimulationRadius", math.huge) 				sethiddenproperty(LocalPlayer, "MaxSimulationRadius", math.huge) 				for _, d in pairs(workspace:GetDescendants()) do 					if d:IsA("Humanoid") and d.Health > 0 and d.Parent:IsA("Model") and d.Parent ~= Character then 						local root = d.Parent:FindFirstChild("HumanoidRootPart") 						if root and HRP and (root.Position - HRP.Position).Magnitude <= 100 then 							d.Health = 0 						end 					end 				end 			end) 			task.wait(1) 		end 	end) end --// Get Target local function GetTarget() 	for _, name in ipairs(TargetNames) do 		for _, mob in ipairs(LiveFolder:GetChildren()) do 			if mob:IsA("Model") and mob.Name == name and mob:FindFirstChild("Humanoid") and mob:FindFirstChild("HumanoidRootPart") then 				if mob.Humanoid.Health > 0 then 					return mob 				end 			end 		end 	end 	return nil end --// Attack local function Attack(mob) 	if not mob or not mob:FindFirstChild("Humanoid") then return end 	local root = mob:FindFirstChild("HumanoidRootPart") 	if root then 		local before = mob.Humanoid.Health 		BladeRemote:FireServer(false, root.Position, root) 		task.wait(0.5) 		if not bossDamaged and mob.Humanoid.Health < before then 			bossDamaged = true 			startKillAura() 		end 	end end --// Farming Loop task.spawn(function() 	while true do 		if farming and Character and HRP then 			local target = GetTarget() 			if target then 				local root = target:FindFirstChild("HumanoidRootPart") 				if root then 					HRP.CFrame = root.CFrame + Vector3.new(0, 5, 0) 					task.wait(0.3) 					while farming and target and target:FindFirstChild("Humanoid") and target.Humanoid.Health > 0 do 						Attack(target) 						task.wait(0.5) 					end 					-- Wait for respawn 					repeat 						task.wait() 						target = GetTarget() 					until not farming or (target and target:FindFirstChild("Humanoid") and target.Humanoid.Health > 0) 					-- Reset for next spawn 					bossDamaged = false 					getgenv().G = false 					killAuraRunning = false 				end 			else 				task.wait(0.5) 			end 		else 			task.wait(0.5) 		end 	end end)
